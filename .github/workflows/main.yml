name: Build and deploy services

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 5.0.x
  PERSON_DIRECTORY: ./Project_2/service-one
  PLACE_DIRECTORY: ./Project_2/service-two
  WEDDING_DIRECTORY: ./Project_2/service-three
  FE_DIRECTORY: ./Project_2/Frontend
  TEST_DIRECTORY: ./Project_2/Project_2
  
  FE_PACKAGE_PATH: ./Project_2/Frontend/publish
  PERSON_PACKAGE_PATH: ./Project_2/service-one/publish
  PLACE_PACKAGE_PATH: ./Project_2/service-two/publish
  WEDDING_PACKAGE_PATH: ./Project_2/service-three/publish

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Test
        run: dotnet test "${{ env.TEST_DIRECTORY }}" /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov

  build-person-service:
    runs-on: ubuntu-latest
    needs: test
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      - name: Restore
        run: dotnet restore "${{ env.PERSON_DIRECTORY }}"
      - name: Build
        run: dotnet build "${{ env.PERSON_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }}
      - name: publish 
        run: dotnet publish "${{ env.PERSON_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --output "${{ env.PERSON_PACKAGE_PATH }}"
      - name: publish Service to Azure
        run: az
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.25.0
          inlineScript: |
            cd "${{ env.PERSON_PACKAGE_PATH }}"
            az webapp up -n kat-person --os-type Linux --resource-group kat-rg --runtime "DOTNET|5.0"
  build-place-service:
      runs-on: ubuntu-latest
      needs: test
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
        - name: Restore
          run: dotnet restore "${{ env.PLACE_DIRECTORY }}"
        - name: Build
          run: dotnet build "${{ env.PLACE_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }}
        - name: Publish
          run: dotnet publish "${{ env.PLACE_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --output "${{ env.PLACE_PACKAGE_PATH }}"
        - name: publish service to Azure
          run: az
        - name: Azure Login
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
      
        - name: Azure CLI script
          uses: azure/CLI@v1
          with:
            azcliversion: 2.25.0
            inlineScript: |
              cd "${{ env.PLACE_PACKAGE_PATH }}"
              az webapp up -n kat-place --os-type Linux --resource-group kat-rg --runtime "DOTNET|5.0"
  build-wedding-service:
    runs-on: ubuntu-latest
    needs: test
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      - name: Restore
        run: dotnet restore "${{ env.WEDDING_DIRECTORY }}"
      - name: Build
        run: dotnet build "${{ env.WEDDING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }}
      - name: Publish
        run: dotnet publish "${{ env.WEDDING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --output "${{ env.WEDDING_PACKAGE_PATH }}"
      - name: publish service to Azure
        run: az
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.25.0
          inlineScript: |
            cd "${{ env.WEDDING_PACKAGE_PATH }}"
            az webapp up -n kat-wedding --os-type Linux --resource-group kat-rg --runtime "DOTNET|5.0"
            az webapp config appsettings set -g kat-rg -n kat-wedding --settings "@../../.github/workflows/mergeSettings.json"
  build-frontend-service:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      - name: Restore
        run: dotnet restore "${{ env.FE_DIRECTORY }}"
      - name: Build
        run: dotnet build "${{ env.FE_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }}
      - name: Publish
        run: dotnet publish "${{ env.FE_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --output "${{ env.FE_PACKAGE_PATH }}"
      - name: publish 
        run: az
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.25.0
          inlineScript: |
            cd "${{ env.FE_PACKAGE_PATH }}"
            az webapp up -n kat-frontend --os-type Linux --resource-group kat-rg --runtime "DOTNET|5.0"
            az webapp config appsettings set -g kat-rg -n kat-frontend --settings "@../../.github/workflows/frontendSettings.json"
